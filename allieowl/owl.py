######## \__ AN oo OWL! __/ ########

from allieowl.base import *

def legs(size, body, width, shade = "black", origin = (0, 0), tweakL = 0, tweakR = 0, thickness = 3):
    pensize(thickness)
    color(shade)
    speed(5)
    #left leg
    penup()
    goto(origin)
    seth(270)
    right(width / 2)
    forward(body)
    seth(270 - tweakL)
    pendown()
    forward(size)
    backward(size / 3)
    left(30)
    forward(size / 3)
    backward(size / 3)
    right(60)
    forward(size / 3)
    #right leg:
    penup()
    goto(origin)
    seth(270)
    left(width / 2)
    forward(body)
    seth(270 + tweakR)
    pendown()
    forward(size)
    backward(size / 3)
    left(30)
    forward(size / 3)
    backward(size / 3)
    right(60)
    forward(size / 3)

def body(size, shade, origin = (0, 0)):
    color(shade)
    speed(5)
    penup()
    goto(origin)
    seth(90)
    forward(size)
    left(90)
    pendown()
    begin_fill()
    circle(size)
    end_fill()
    penup()
    goto(origin)

def ears(size, shade, body, origin = (0, 0)):
    color(shade)
    speed(5)
    #left ear:
    penup()
    goto(origin)
    seth(90)
    forward(body * 2/3)
    left(90)
    forward(body * 3/4)
    left(180)
    pendown()
    begin_fill()
    triangle(size)
    end_fill()
    #right ear:
    penup()
    forward((body * 3/2) - size)
    pendown()
    begin_fill()
    triangle(size)
    end_fill()

def eyes(x, y, size, shade, goofR = 0, goofL = 0):
    pensize(1)
    color("black", "white")
    speed(5)
    #eyeballs:
    seth(90)
    move(x, y)
    begin_fill()
    circle(size)
    left(180)
    circle(size)
    end_fill()
    #left iris:
    color(shade)
    right(90)
    penup()
    forward(size * 4 / 3)
    pendown()
    left(90)
    begin_fill()
    circle(size / 3)
    end_fill()
    left(90)
    #right iris:
    penup()
    forward(size * 2)
    pendown()
    right(90)
    begin_fill()
    circle(size / 3)
    end_fill()
    left(90)
    #right pupil:
    color("black")
    penup()
    forward((size / 6) - goofR)
    right(90)
    pendown()
    begin_fill()
    circle(size / 6)
    end_fill()
    #left pupil:
    penup()
    right(90)
    forward((size * 5 / 3) - (goofR + goofL))
    right(90)
    pendown()
    begin_fill()
    circle(size / 6)
    end_fill()
    #left eyebrowl:
    pensize(8)
    move(x, y)
    left(85)
    penup()
    forward(size * 2.3)
    right(135)
    pendown()
    forward(size * 2)
    #right eyebrowl:
    move(x, y)
    seth(5)
    penup()
    forward(size * 2.3)
    left(135)
    pendown()
    forward(size * 2)
    move(x, y)
    seth(270)

def beak(xEyes, yEyes, size, shade = '#F9FF40'):
    pensize(1)
    color("black", shade)
    speed(5)
    right(30)
    penup()
    forward(50)
    left(60)
    pendown()
    begin_fill()
    triangle(size)
    end_fill()

def wings(shade, body, lean = 0, origin = (0, 0)):
    pensize(5)
    color(shade)
    speed(10)
    #left wing:
    penup()
    goto(origin)
    seth(150)
    forward(body)
    seth(270)
    for wing in range(12 - lean):
        pendown()
        forward(body)
        penup()
        backward(body - 5)
        left(90)
        forward(5)
        right(88)
    #right wing:
    penup()
    goto(origin)
    seth(30)
    forward(body)
    seth(270)
    for wing in range(12 + lean):
        pendown()
        forward(body)
        penup()
        backward(body - 5)
        right(90)
        forward(5)
        left(88)
    return lean

def feathers(size, shade, number, body, face, wings, shift):
    pensize(2)
    color(shade)
    speed(5)
    for vees in range (0, number):
        while True:
            #pick random locations for feathers that aren't on the wings or face:
            x = randint((-body), (body + 1))
            y = randint((-body), (body + 1))
            leftWing = (-2 * x) - (body * 2/3) + (wings / 2)
            rightWing = (2 * x) - (body * 2/3) + (wings / 2)
            if (y < face) and (y > leftWing - (size * 2/3)) and (y > rightWing + (size * 4)):
                break
        move((x + shift), y)
        seth(285)
        forward(size)
        left(150)
        forward(size)
        right(150)
        forward(size)
        left(150)
        forward(size)

